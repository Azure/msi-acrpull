name: Release and Publish

on:
  push:
    tags:
    - "v*"
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "Release tag to publish"
        type: string
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Get image metadata
      id: get_metadata
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          IMG_TAG="${{ github.ref }}"
        else
          IMG_TAG=${{ github.event.inputs.releaseTag }}
        fi
        IMG="${{ secrets.AZURE_CONTAINER_REGISTRY }}/public/aks/msi-acrpull:${IMG_TAG}"
        echo "IMG_TAG=${IMG_TAG}" >> ${GITHUB_OUTPUT}
        echo "IMG=${IMG}" >> ${GITHUB_OUTPUT}
    outputs:
      IMG_TAG: ${{ steps.get_metadata.outputs.IMG_TAG }}
      IMG: ${{ steps.get_metadata.outputs.IMG }}

  release:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.setup.outputs.IMG_TAG }}
        release_name: Release ${{ needs.setup.outputs.IMG_TAG }}
        draft: true

  publish:
    runs-on:
      labels: ["self-hosted", "1ES.Pool=${{ vars.RUNNER_BASE_NAME}}-ubuntu"]
    needs: setup
    env:
      IMG: ${{ needs.setup.outputs.IMG }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Build the Docker image
      run: make docker-build

    - name: Run vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMG }}
        format: table

    - name: Azure Container Registry Login
      run: |
        az login --identity -o none
        az acr login -n ${{ secrets.AZURE_CONTAINER_REGISTRY }}

    - name: Push to CI ACR
      run: make docker-push